name: "Terraform"

on:
  push:
    branches: ["main"]
    paths:
      - terraform/**
      - api/**
  pull_request:

permissions:
  contents: read
  id-token: write

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-to-assume: ${{ secrets.CICD_RUNNER_AWS_ROLE }}

      - name: Configure Terraform Backend
        run: |
          cat > backend.tf << EOF
          terraform {
            backend "s3" {
              bucket               = "${{ vars.TF_STATE_BUCKET }}"
              region               = "${{ vars.TF_STATE_REGION }}"
              key                  = "${{ vars.TF_STATE_BUCKET_KEY }}"
              workspace_key_prefix = "${{ vars.TF_STATE_WORKSPACE_KEY_PREFIX }}"
            }
          }
          EOF

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.7"

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        run: terraform init

      # Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform plan -input=false

    # On push to "main", build or change infrastructure according to Terraform configuration files
    # - name: Terraform Apply
    #   if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
    #   run: terraform apply -auto-approve -input=false
